@using Microsoft.Extensions.Localization
@using QRSharingApp.Common
@using QRSharingApp.Common.Services
@using QRSharingApp.Common.Settings.Interfaces
@using QRSharingApp.WebApplication.Controllers
@using QRSharingApp.WebApplication.Helpers
@using QRSharingApp.WebApplication.Services
@model DownloadDataViewModel

@inject IWebSetting sharedSettingService
@inject IStringLocalizer<FileController> Localizer

@{
    var currentCountryCode = sharedSettingService.DefaultCountryOnDownload;
    var requiredFields = sharedSettingService.RequiredFieldsForDownload;
    var showAgreementCheckbox = sharedSettingService.ShowAgreedCheckboxOnDownload;
}

<style>
    a .disabled {
        pointer-events: none;
        cursor: default;
    }
</style>

<div class="card text-center">
    <div class="card-header">
        @(Localizer.GetString("DownloadFile") + ": " + Model.Name)
    </div>
    <div class="card-body">
        <div style="position: relative;">
            <div style="margin: 0px 14px;">
                @if (!requiredFields.Contains(1))
                {
                    <div class="mb-3">
                        <label for="name" class="form-label">@Localizer.GetString("Name")</label>
                        <input id="name" name="name" type="text" class="form-control" onkeyup="OnFormInputChanged(event)">
                    </div>
                }

                @if (!requiredFields.Contains(2))
                {
                    <div class="mb-3">
                        <label for="email" class="form-label">@Localizer.GetString("Email")</label>
                        <input id="email" name="email" type="email" class="form-control" onkeyup="OnFormInputChanged(event)">
                    </div>
                }

                @if (!requiredFields.Contains(3))
                {
                    <div class="row">
                        <div class="col-6">
                            <label class="form-label">@Localizer.GetString("Country")</label>
                            @Html.DropDownList(
                                "country-code-dropdown",
                                CountriesProvider.GetAll().Select(_ => new SelectListItem(_.DisplayName, _.CallingCode, _.Code == currentCountryCode)),
                                new { @class = "form-select" })
                        </div>
                        <div class="col-6">
                            <label for="phone" class="form-label">@Localizer.GetString("PhoneNumber")</label>
                            <input id="phone" name="phone" type="tel" class="form-control" pattern="^\d{2}-\d{3}-\d{2}-\d{2}" onkeyup="OnFormInputChanged(event)">
                        </div>
                    </div>
                }
            </div>
            <form id="download-file-form" class="was-validated card-body" onsubmit="OnDownloadFormSubmit(event)"
                  method="post" action="/DownloadHistory/@nameof(DownloadHistoryController.Save)"
                  style="padding: 1rem 1rem 1rem 1rem;">
                @Html.HiddenFor(_ => _.Id)
                @if (requiredFields.Contains(1))
                {
                    <div class="mb-3">
                        <label for="name" class="form-label">@Localizer.GetString("Name")</label>
                        <input id="name" name="name" type="text" class="form-control" title="@Localizer.GetString("FieldIsRequired")" required onkeyup="OnFormInputChanged(event)" >
                    </div>
                }

                @if (requiredFields.Contains(2))
                {
                    <div class="mb-3">
                        <label for="email" class="form-label">@Localizer.GetString("Email")</label>
                        <input id="email" name="email" type="email" class="form-control" title="@Localizer.GetString("FieldIsRequired")" required onkeyup="OnFormInputChanged(event)">
                    </div>
                }

                @if (requiredFields.Contains(3))
                {
                    <div class="row">
                        <div class="col-6">
                            <label class="form-label">@Localizer.GetString("Country")</label>
                            @Html.DropDownList(
                                "country-code-dropdown",
                                CountriesProvider.GetAll().Select(_ => new SelectListItem(_.DisplayName, _.CallingCode, _.Code == currentCountryCode)),
                                new { @class = "form-select" })
                        </div>
                        <div class="col-6">
                            <label for="phone" class="form-label">@Localizer.GetString("PhoneNumber")</label>
                            <input id="phone" name="phone" type="tel" class="form-control" title="@Localizer.GetString("FieldIsRequired")" pattern="^\d{2}-\d{3}-\d{2}-\d{2}" required onkeyup="OnFormInputChanged(event)">
                        </div>
                    </div>
                }

                @if (showAgreementCheckbox)
                {
                    <div class="row">
                        <div style="margin-top: 30px">
                            <input style="height: 15px; width: 15px" type="checkbox" class="form-input" id="AgreementCheckbox" onchange="OnFormInputChanged(this)">
                            <label style="vertical-align: middle" class="form-label" for="exampleCheck1">I agree to the processing of personal data</label>
                        </div>
                    </div>
                }
                
                <div class="mb-3" style="margin-top: 30px">
                    <a class="btn btn-outline-primary" href="@($"/File/{nameof(FileController.Preview)}/{Model.Id}")">
                        @Localizer.GetString("Back")
                    </a>
                    <a id="download-file-link" class="btn btn-primary disabled" href="@Model.PhysicalFileAdress" download="@Model.Name">
                        @Localizer.GetString("DownloadFile")
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

<script type="text/JavaScript">
    var baseFileAdress = '/File/PhysicalFileWithDataSave?';
    var fileId = '@Model.Id';
    var checkAgreementCheckbox = '@showAgreementCheckbox';

    function OnFormInputChanged(e) {
        if (document.getElementById("name").checkValidity()
            && document.getElementById("email").checkValidity()
            && (!document.getElementById("phone").value.includes('_') || !document.getElementById("phone").hasAttribute("required")))
        {
            if(checkAgreementCheckbox == "True")
            {
                if(document.getElementById("AgreementCheckbox").checked == false)
                {
                    var element1 = document.getElementById("download-file-link");
                    element1.classList.add("disabled");
                    return;
                }
            }

            var element = document.getElementById("download-file-link");
            element.classList.remove("disabled");

            document.getElementById('download-file-link').href = baseFileAdress
                + "id=" + fileId
                + "&name=" + encodeURIComponent(document.getElementById("name").value)
                + "&email=" + encodeURIComponent(document.getElementById("email").value)
                + "&phone=" + encodeURIComponent("+" + document.getElementById("country-code-dropdown").value + "-" + document.getElementById("phone").value);
        }
        else
        {
            var element = document.getElementById("download-file-link");
            element.classList.add("disabled");
        }
    }

    (function () {
        IMask(
            document.getElementById('phone'), {
                mask: '00-000-00-00',
                lazy: false,
        });

        OnFormInputChanged(null);
    })();
</script>