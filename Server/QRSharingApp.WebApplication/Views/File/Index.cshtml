@model List<FilePreviewViewModel>
@{
    ViewData["Title"] = "Web Gallery";
}

<style type="text/css">
    .video-thumbnail-item {
        width: 308px;
        height: 350px;
        position: relative;
        display: flex;
        align-content: center;
        flex-wrap: wrap;
        margin:5px;
        cursor:pointer
    }
    
    .photo-thumbnail-item {
        width: 308px;
        height: 350px;
        position: relative;
        display: flex;
        align-content: center;
        flex-wrap: wrap;
        margin:5px;
        cursor:pointer
    }
    
    .thumbnail-img {
        object-fit:contain;
        height:342px;
        width: 300px;
        margin:0px;
    }
    
    .thumbnail-qrcode-img {
        width: 150px;
        height: 150px;
        position: absolute;
        bottom: 0%;
        right: 0%;
    }

/*    #lg-download-1
    {
        display: none
    }*/
</style>

<div id="lightgallery" style="display: flex; flex-direction: row; flex-wrap: wrap; align-content: center; justify-content: space-evenly;">
    @foreach (var viewModel in Model.Where(_ => _.IsPhoto || _.IsVideo))
    {
        @if (viewModel.IsVideo)
        {
            <div id="@viewModel.Id"
                 class="border border-4 photo-thumbnail-item"
                 onclick="ThumbnaiClick(this)"
                 download="@(@viewModel.Name)"
                 data-video='{"source": [{"src":"@viewModel.Adress", "type":"video/@viewModel.Extension"}], "attributes": {"preload": true, "playsinline": true, "controls": true, "autoplay": true, "loop": true}}'
                 data-download-url='@viewModel.Adress'
                 data-poster="@viewModel.ThumbnailAdress">
                <img class="thumbnail-img" src="@viewModel.ThumbnailAdress" />
                <img class="thumbnail-qrcode-img" src="@viewModel.QRCodeAdress" />
            </div>
        }
        else
        {
            <div id="@viewModel.Id"
                 class="border border-4 video-thumbnail-item"
                 onclick="ThumbnaiClick(this)"
                 download="@(@viewModel.Name)"
                 data-src='@viewModel.Adress'>
                <img class="thumbnail-img" src="@viewModel.ThumbnailAdress" />
                <img class="thumbnail-qrcode-img" src="@viewModel.QRCodeAdress" />
            </div>
        }
    }
</div>

<script type="text/javascript">
    const lgDemoUpdateSlides = document.getElementById(
      "lightgallery"
    );
    var lightGalleryInstance = null;
    
    lgDemoUpdateSlides.addEventListener("lgAfterClose", (event) => {
        event.detail.instance.destroy();
    });

    function ThumbnaiClick(element) {
        lightGalleryInstance = lightGallery(lgDemoUpdateSlides, {
                plugins: [lgThumbnail, lgVideo],
                thumbnail: true,
                videojs: false,
                autoplayVideoOnSlide: true,
                zoomFromOrigin: false,
                autoplayFirstVideo: false
            });
        lightGalleryInstance.openGallery(Array.prototype.indexOf.call(element.parentNode.children, element));
    }
</script>